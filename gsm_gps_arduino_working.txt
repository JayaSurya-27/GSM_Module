#include <TinyGPS++.h>

TinyGPSPlus gps;
unsigned long currentMillis;
unsigned long previousMillis = 0;
long interval = 60000;

const char* apiKey = "AYDHNWSD93VRXC1S"; // ThingSpeak API Key

void setup() {


  delay(2000);
  Serial.begin(115200); // console
  Serial1.begin(115200);//gsm data
  Serial2.begin(9600);//gps data

  delay(1000);

  Serial.println("Initializing...");
  sendATcommand("AT", "OK", 2000);
  //Serial.println("Setup Complete");
}

void loop() {
  
  // This sketch displays information every time a new sentence is correctly encoded.
  while (Serial2.available() > 0)
    if (gps.encode(Serial2.read()))
       displayInfo();

  // If 5000 milliseconds pass and there are no characters coming in
  // over the software serial port, show a "No GPS detected" error
  if (millis() > 5000 && gps.charsProcessed() < 10)
  {
    Serial.println("No GPS detected");
    while(true);
  }

}


void displayInfo()
{
  if (gps.location.isValid())
  {
    Serial.print("Latitude: ");
    Serial.println(gps.location.lat(), 6);
    Serial.print("Longitude: ");
    Serial.println(gps.location.lng(), 6);
    Serial.print("Altitude: ");
    Serial.println(gps.altitude.meters());

    float latitude = gps.location.lat();
    float longitude = gps.location.lng();

    unsigned long currentMillis = millis();

    if (currentMillis - previousMillis > interval) {
        previousMillis = currentMillis;
        sendGpsToThingSpeak(latitude,longitude);
    }

  }
  else
  {
    Serial.println("Location: Not Available");
  }
  
  Serial.print("Date: ");
  if (gps.date.isValid())
  {
    Serial.print(gps.date.month());
    Serial.print("/");
    Serial.print(gps.date.day());
    Serial.print("/");
    Serial.println(gps.date.year());
  }
  else
  {
    Serial.println("Not Available");
  }

  Serial.print("Time: ");
  if (gps.time.isValid())
  {
    if (gps.time.hour() < 10) Serial.print(F("0"));
    Serial.print(gps.time.hour());
    Serial.print(":");
    if (gps.time.minute() < 10) Serial.print(F("0"));
    Serial.print(gps.time.minute());
    Serial.print(":");
    if (gps.time.second() < 10) Serial.print(F("0"));
    Serial.print(gps.time.second());
    Serial.print(".");
    if (gps.time.centisecond() < 10) Serial.print(F("0"));
    Serial.println(gps.time.centisecond());
  }
  else
  {
    Serial.println("Not Available");
  }

  Serial.println();
  Serial.println();
  delay(1000);
}

void sendGpsToThingSpeak(float latitude,float longitude) {
      Serial.print("Latitude: ");
      Serial.println(latitude, 6);
      Serial.print("Longitude: ");
      Serial.println(longitude, 6);

      String url = "http://api.thingspeak.com/update?api_key=";
      url += apiKey;
      url += "&field1=";
      url += String(latitude, 6);
      url += "&field2=";
      url += String(longitude, 6);

      sendATcommand("AT+HTTPINIT", "OK", 2000);
      sendATcommand("AT+HTTPPARA=\"URL\",\"" + url + "\"", "OK", 1000);
      sendATcommand("AT+HTTPACTION=0", "200", 10000);
      sendATcommand("AT+HTTPREAD", "+HTTPREAD:", 10000); 
      sendATcommand("AT+HTTPTERM", "OK", 2000);
      Serial.println("Data sent to ThingSpeak.");
}

int8_t sendATcommand(String ATcommand, String expected_answer, unsigned int timeout) {
  String response = "";
  Serial.print("Command: ");
  Serial.println(ATcommand);
  Serial1.println(ATcommand);
  unsigned long previous = millis();
  while (millis() - previous < timeout) {
    if (Serial1.available() > 0) {
      char c = Serial1.read();
      response += c;
      if (response.indexOf(expected_answer) != -1) {
        Serial.print("Response: ");
        Serial.println(response);
        return 1;
      }
    }
  }
  Serial.print("Response_FAIL: ");
  Serial.println(response);
  return 0;
}

